<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Market Tracker</title>
    <style>
body {
    font-family: Arial, sans-serif;
    background-color: #212f4d;
    color: white;
    text-align: center;
    margin: 0;
    padding: 0;
    flex-direction: column;
    justify-content: center;
    height: 100vh;
}

h1 {
    margin-bottom: 20px;
    font-size: 24px;
    color: #ffffff;
}

.controls {
    margin-bottom: 20px;
}

.controls label {
    margin: 0 10px;
    cursor: pointer;
    font-size: 14px;
    color: #ffffff;
}

.mcx-con {
    top : 60px;
    margin: 20px 0;
    padding: 20px;
    background-color: #2a394e;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
    position: relative;
}

.mcx-header {
    position: absolute;
    top: 10px;
    left: 10px;
}

.mcx-text-on-top-on-top {
    font-size: 18px;
    font-weight: bold;
    background-color: #284c86;
    padding: 5px 10px;
    border-radius: 5px;
}

button {
    background-color: #e69b05;
    border: none;
    color: white;
    padding: 10px 15px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 12px;
    margin: 4px 2px;
    cursor: pointer;
    border-radius: 5px;
    transition: background-color 0.3s;
}

button:hover {
    background-color: #45a049;
}

input.search {
    padding: 10px;
    border: 1px solid #333;
    border-radius: 5px;
    margin: 0 4px;
    
    background-color: #1e2a36;
    color: white;
}

input.search::placeholder {
    color: #aaa;
}


.main-con {
    margin-top: 20px;
}

.modal {
    display: none;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    justify-content: center;
    align-items: center;
}

.modal-content {
    background-color: #2a394e;
    padding: 20px;
    border-radius: 8px;
    width: 300px;
    color: white;
    text-align: left;
}

.close {
    color: white;
    float: right;
    font-size: 24px;
    font-weight: bold;
    cursor: pointer;
}

.close:hover,
.close:focus {
    color: #f44336;
}

.script-list {
    list-style-type: none;
    padding: 0;
}

.script-list li {
    padding: 8px;
    cursor: pointer;
}

.script-list li:hover {
    background-color: #3c4b61;
}
.order-modal {
    display: none;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    justify-content: center;
    align-items: center;
}

.order-modal-content {
    background-color: #2a394e;
    padding: 20px;
    border-radius: 8px;
    width: 400px;
    color: white;
    text-align: left;
}

.order-modal-content h3 {
    margin-top: 0;
}

.order-modal-content label {
    display: block;
    margin-top: 10px;
}

.order-modal-content input,
.order-modal-content select {
    width: calc(100% - 16px);
    padding: 8px;
    margin-top: 4px;
    border: 1px solid #333;
    border-radius: 5px;
    background-color: #1e2a36;
    color: white;
}

.order-modal-content button {
    background-color: #e69b05;
    border: none;
    color: white;
    padding: 10px 15px;
    margin-top: 10px;
    cursor: pointer;
    border-radius: 5px;
    transition: background-color 0.3s;
}

.order-modal-content button:hover {
    background-color: #45a049;
}
.ticker {
    position: fixed; /* Keep the ticker fixed at the top */
    top: 0; /* Align it to the top of the page */
    left: 0; /* Start from the left edge */
    width: 100%; /* Make the ticker span the entire width */
    background-color: #ffffff; /* Background color */
    padding: 10px 0; /* Padding for the ticker */
    z-index: 9999; /* Ensure it stays above other elements */
    overflow: hidden; /* Hide overflow to create scrolling effect */
    white-space: nowrap; /* Prevent line breaks */
    border-bottom: 2px solid #e69b05; /* Optional border at the bottom for visual effect */
}

/* Ticker Text Animation */
.ticker-text {
    display: inline-block;
    padding-left: 100%; /* Start off-screen from the right */
    animation: scroll 10s linear infinite; /* Adjust the duration for the scroll speed */
    color: #e69b05; /* Ticker text color */
    font-size: 18px;
}

/* Basic Navbar Styling */
.navbar {
    background-color: #0c1b33;
    padding: 10px;
    position: fixed; /* Fix the navbar at the top */
    width: 100%; /* Make the navbar span the entire width */
    z-index: 1000; /* Ensure it appears above other elements */
    top: 45px; /* Position it at the top */
}

.navbar-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.navbar ul {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
}

.navbar ul li {
    display: inline-block;
    margin: 0 20px;
}

.navbar ul li a {
    color: #fff;
    text-decoration: none;
    font-weight: bold;
    font-size: 16px;
    display: flex;
    align-items: center;
}

.navbar ul li a:hover {
    color: #83a3ff;
}

.nav-icon {
    width: 20px;
    height: 20px;
    margin-right: 8px;
}

/* Toggle Button Styling */
.navbar-toggle {
    display: none;
    flex-direction: column;
    cursor: pointer;
}

.navbar-toggle span {
    width: 25px;
    height: 3px;
    background-color: white;
    margin: 4px;
    transition: all 0.3s ease;
}

/* Responsive Design */
@media (max-width: 768px) {
    .navbar ul {
        flex-direction: column;
        position: absolute;
        top: 60px; /* Adjust based on the navbar height */
        left: 0;
        width: 100%;
        background-color: #0c1b33;
        display: none; /* Initially hidden */
        z-index: 1000; /* Make sure it appears above other content */
    }

    .navbar ul li {
        display: block;
        text-align: center;
        padding: 10px 0;
    }

    .navbar ul li a {
        font-size: 18px;
    }

    .navbar-toggle {
        display: flex; /* Show the toggle button */
    }

    .navbar ul.open {
        display: flex; /* Show the menu when toggled */
    }

    /* Prevent other content from being covered by navbar */
    .main-con {
        margin-top: 60px; /* Adjust to the navbar height */
    }
}



@keyframes scroll {
    from {
        transform: translateX(0%); /* Start from the right */
    }

    to {
        transform: translateX(-100%); /* End at the left */
    }
}

body {
    font-family: Arial, sans-serif;
    background-color: #212f4d;
    color: white;
    text-align: center;
    margin: 0;
    padding: 0;
}

.controls {
    display: flex;
    flex-wrap: nowrap;
    justify-content: center;
    align-items: center;
    gap: 10px;
    margin-bottom: 20px;
}

.controls button, .controls .search {
    padding: 10px;
    border: none;
    border-radius: 5px;
    flex-shrink: 0;
}

button {
    background-color: #e69b05;
    color: white;
    cursor: pointer;
    transition: background-color 0.3s;
}

button:hover {
    background-color: #45a049;
}

.search {
    padding: 10px;
    border: 1px solid #333;
    border-radius: 5px;
    background-color: #1e2a36;
    color: white;
    min-width: 150px; /* Prevent search bar from shrinking too much */
}

.search::placeholder {
    color: #aaa;
}

@media (max-width: 768px) {
    .controls {
        gap: 5px; /* Reduce gap on smaller screens */
    }

    .controls button, .controls .search {
        padding: 8px; /* Reduce padding on smaller screens */
        font-size: 12px;
    }

    .search {
        min-width: 100px; /* Smaller search bar on mobile */
    }
}

@media (max-width: 480px) {
    .controls button, .controls .search {
        font-size: 10px;
    }

    .search {
        min-width: 80px; /* Even smaller search bar on very small screens */
    }
}


main.table {
    width: 82vw;
    height: 90vh;
    background-color: #fff5;

    backdrop-filter: blur(7px);
    box-shadow: 0 .4rem .8rem #0005;
    border-radius: .8rem;

    overflow: hidden;
}

.table__header {
    width: 100%;
    height: 10%;
    background-color: #fff4;
    padding: .8rem 1rem;

    display: flex;
    justify-content: space-between;
    align-items: center;
}

.table__header .input-group {
    width: 35%;
    height: 100%;
    background-color: #fff5;
    padding: 0 .8rem;
    border-radius: 2rem;

    display: flex;
    justify-content: center;
    align-items: center;

    transition: .2s;
}

.table__header .input-group:hover {
    width: 45%;
    background-color: #fff8;
    box-shadow: 0 .1rem .4rem #0002;
}

.table__header .input-group img {
    width: 1.2rem;
    height: 1.2rem;
}

.table__header .input-group input {
    width: 100%;
    padding: 0 .5rem 0 .3rem;
    background-color: transparent;
    border: none;
    outline: none;
}

.table__body {
    width: 95%;
    max-height: calc(89% - 1.6rem);
    background-color: #fffb;

    margin: .8rem auto;
    border-radius: .6rem;

    overflow: auto;
    overflow: overlay;
}


.table__body::-webkit-scrollbar{
    width: 0.5rem;
    height: 0.5rem;
}

.table__body::-webkit-scrollbar-thumb{
    border-radius: .5rem;
    background-color: #0004;
    visibility: hidden;
}

.table__body:hover::-webkit-scrollbar-thumb{ 
    visibility: visible;
}


table {
    width: 100%;
}

td img {
    width: 36px;
    height: 36px;
    margin-right: .5rem;
    border-radius: 50%;

    vertical-align: middle;
}

table, th, td {
    border-collapse: collapse;
    padding: 1rem;
    text-align: left;
}

thead th {
    position: sticky;
    top: 0;
    left: 0;
    background-color: #E69B05;
    cursor: pointer;
    text-transform: capitalize;
}

tbody tr:nth-child(even) {
    background-color: #0000000b;
}

tbody tr {
    --delay: .1s;
    transition: .5s ease-in-out var(--delay), background-color 0s;
    color: black;
}

tbody tr.hide {
    opacity: 0;
    transform: translateX(100%);
}

tbody tr:hover {
    background-color: #fff6 !important;
}

tbody tr td,
tbody tr td p,
tbody tr td img {
    transition: .2s ease-in-out;
}

tbody tr.hide td,
tbody tr.hide td p {
    padding: 0;
    font: 0 / 0 sans-serif;
    transition: .2s ease-in-out .5s;
}

tbody tr.hide td img {
    width: 0;
    height: 0;
    transition: .2s ease-in-out .5s;
}

.status {
    padding: .4rem 0;
    border-radius: 2rem;
    text-align: center;
}

.status.delivered {
    background-color: #86e49d;
    color: #006b21;
}

.status.cancelled {
    background-color: #d893a3;
    color: #b30021;
}

.status.pending {
    background-color: #ebc474;
}

.status.shipped {
    background-color: #6fcaea;
}


@media (max-width: 1000px) {
    td:not(:first-of-type) {
    }
}

thead th span.icon-arrow {
    display: inline-block;
    width: 1.3rem;
    height: 1.3rem;
    border-radius: 50%;
    border: 1.4px solid transparent;
    
    text-align: center;
    font-size: 1rem;
    
    margin-left: .5rem;
    transition: .2s ease-in-out;
}

thead th:hover span.icon-arrow{
    border: 1.4px solid #6c00bd;
}

thead th:hover {
    color: #6c00bd;
}

thead th.active span.icon-arrow{
    background-color: #6c00bd;
    color: #fff;
}

thead th.asc span.icon-arrow{
    transform: rotate(180deg);
}

thead th.active,tbody td.active {
    color: #6c00bd;
}

.export__file {
    position: relative;
}

.export__file .export__file-btn {
    display: inline-block;
    width: 2rem;
    height: 2rem;
    background: #fff6 url(images/export.png) center / 80% no-repeat;
    border-radius: 50%;
    transition: .2s ease-in-out;
}

.export__file .export__file-btn:hover { 
    background-color: #fff;
    transform: scale(1.15);
    cursor: pointer;
}

.export__file input {
    display: none;
}

.export__file .export__file-options {
    position: absolute;
    right: 0;
    
    width: 12rem;
    border-radius: .5rem;
    overflow: hidden;
    text-align: center;

    opacity: 0;
    transform: scale(.8);
    transform-origin: top right;
    
    box-shadow: 0 .2rem .5rem #0004;
    
    transition: .2s;
}

.export__file input:checked + .export__file-options {
    opacity: 1;
    transform: scale(1);
    z-index: 100;
}

.export__file .export__file-options label{
    display: block;
    width: 100%;
    padding: .6rem 0;
    background-color: #f2f2f2;
    
    display: flex;
    justify-content: space-around;
    align-items: center;

    transition: .2s ease-in-out;
}

.export__file .export__file-options label:first-of-type{
    padding: 1rem 0;
    background-color: #86e49d !important;
}

.export__file .export__file-options label:hover{
    transform: scale(1.05);
    background-color: #fff;
    cursor: pointer;
}

.export__file .export__file-options img{
    width: 2rem;
    height: auto;
}


</style>
</head>

<body>
    <div class="ticker">
        <div class="ticker-text" id="tickerText">
            Nifty: Loading... | Bank Nifty: Loading...
        </div>
    </div>
    <!-- Navigation Bar with Custom Image Logos -->
    <nav class="navbar">
        <div class="navbar-container">
            <!-- Toggle Button (Hamburger Icon) -->
            <div class="navbar-toggle">
                <span></span>
                <span></span>
                <span></span>
            </div>
    
            <!-- Navbar List -->
            <ul class="navbar-list">
                <li><a href="#watch-market"><img src="navicons/watch.png" alt="Watch Market" class="nav-icon"> Watch Market</a></li>
                <li><a href="#position-report"><img src="navicons/financial-statement.png" alt="Position Report" class="nav-icon"> Position Report</a></li>
                <li><a href="#trading"><img src="navicons/trading-chart.png" alt="Trading" class="nav-icon"> Trading</a></li>
                <li><a href="#logs"><img src="navicons/log-file.png" alt="Logs" class="nav-icon"> Logs</a></li>
                <li><a href="#ledger"><img src="navicons/ledger.png" alt="Ledger" class="nav-icon"> Ledger</a></li>
                <li><a href="#settings"><img src="navicons/setting-gear.png" alt="Settings" class="nav-icon"> Settings</a></li>
            </ul>
        </div>
    </nav>

    <div class="main-con">
        <div class="mcx-con">
            <div class="mcx-header">
                <span class="mcx-text-on-top-on-top">MCX</span>
            </div>
            <br>
            <input class="search" type="text" placeholder="Search...">
            <br>
            <div class="controls">
                <button class="mcx-add-new-script">Add New Script</button>
                <button class="add-new-expiry">Add New Expiry</button>
                <button class="mcx-add-all-Script">Add All Script</button>
            </div>
        </div>

        <div class="mcx-con">
            <div class="mcx-header">
                <span class="mcx-text-on-top-on-top">NSE</span>
            </div>
            <br>
            <input class="search" type="text" placeholder="Search...">

            <br>

            <div class="controls">
                <button class="nsc-add-new-script">Add New Script</button>
                <button class="add-new-expiry">Add New Expiry</button>
                <button class="addAllScripts">Add All Script</button>
            </div>
            <div id="myModal" class="modal">
                <div class="modal-content">
                    <span class="close">&times;</span>
                    <h3>Select Scripts</h3>
                    <ul class="script-list">
                        <li onclick="toggleSelection(this)">Nifty 50</li>
                        <li onclick="toggleSelection(this)">Bank Nifty</li>
                        <li onclick="toggleSelection(this)">Reliance</li>
                        <li onclick="toggleSelection(this)">TCS</li>
                        <!-- Add more scripts as needed -->
                    </ul>
                    <button id="addSelectedScripts">Add Selected Scripts</button>
                    <button id="addAllScripts">Add All Scripts</button>
                </div>
            </div>
            
            
            <section class="table__body">
                <table id="dataTable">
                    <thead>
                        <tr>
                            <th>Script</th>
                            <th>Bid</th>
                            <th>Ask</th>
                            <th>LTP</th>
                            <th>Change</th>
                            <th>Change %</th>
                            <th>High</th>
                            <th>Low</th>
                            <th>Open</th>
                            <th>Close</th>
                            <th>Remove</th>
                        </tr>
                    </thead>
                    <tbody id="dataTableBody">
                        <!-- Rows will be added dynamically -->
                    </tbody>
                </table>
            </section>
        </div>

    </div>
    <div id="orderModal" class="order-modal">
        <div class="order-modal-content">
            <span class="close-order" onclick="closeOrderModal()">&times;</span>
            <h3>Place Order</h3>
            <label>
                <input type="checkbox" id="buyCheckbox"> Buy
            </label>
            <label>
                <input type="checkbox" id="sellCheckbox"> Sell
            </label>
            <label for="orderType">Order Type:</label>
            <select id="orderType">
                <option value="market">Market</option>
                <option value="limit">Limit</option>
            </select>
            <label for="lotSize">Lot Size:</label>
            <input type="number" id="lotSize" placeholder="Enter Lot Size">
            <label for="quantity">Quantity:</label>
            <input type="number" id="quantity" placeholder="Enter Quantity">
            <label for="price">Price:</label>
            <input type="number" id="price" placeholder="Enter Price" step="0.01">
            <button id="submitOrder" onclick="submitOrder()">Submit</button>
            <button onclick="closeOrderModal()">Close</button>
        </div>
    </div>
    <div class="mcx-con">
        <div class="mcx-header">
            <span class="mcx-text-on-top-on-top">NOPT</span>
        </div>
        <br>
        <input class="search" type="text" placeholder="Search...">

        <br>

        <div class="controls">
            <button class="mcx-add-new-script">Add New Script</button>
            <button class="mcx-add-all-Script">Add All Script</button>
        </div>
    </div>
    <script>var modal = document.getElementById('myModal');
var btn = document.querySelector('.nsc-add-new-script');
var span = document.querySelector('.close');
var selectedScripts = [];
var addedScripts = []; // Track added scripts
var orderModal = document.getElementById('orderModal');



document.addEventListener('DOMContentLoaded', function() {
    const toggleButton = document.querySelector('.navbar-toggle');
    const navList = document.querySelector('.navbar ul');

    toggleButton.addEventListener('click', function() {
        navList.classList.toggle('open');
    });
});

function openOrderModal(script) {
    orderModal.style.display = 'flex';
    document.querySelector('.order-modal-content h3').textContent = `Place Order for ${script}`;
}
function closeOrderModal() {
    orderModal.style.display = 'none';
}
// Open the modal
btn.onclick = function () {
    modal.style.display = 'flex';
    renderScriptList(); // Render script list each time the modal opens
}

// Close the modal
span.onclick = function () {
    modal.style.display = 'none';
}

// Close the modal when clicking outside of it
window.onclick = function (event) {
    if (event.target == modal) {
        modal.style.display = 'none';
    }
}

// Toggle selection of scripts
function toggleSelection(item) {
    item.classList.toggle('selected');
}

// Render script list based on added scripts
function renderScriptList() {
    const scriptList = document.querySelector('.script-list');
    const scripts = ["Nifty 50", "Bank Nifty", "Reliance", "TCS"]; // Add more scripts as needed

    // Clear the existing list
    scriptList.innerHTML = '';

    scripts.forEach(script => {
        const li = document.createElement('li');
        li.textContent = script;

        // Disable or style already added scripts
        if (addedScripts.includes(script)) {
            li.style.color = '#aaa'; // Change color for already added scripts
            li.onclick = function () { return false; }; // Disable click
        } else {
            li.onclick = function () {
                toggleSelection(li);
            };
        }

        scriptList.appendChild(li);
    });
}

// Add selected scripts to the table
document.getElementById('addSelectedScripts').onclick = function () {
    const selectedItems = document.querySelectorAll('.script-list li.selected');
    selectedItems.forEach(item => {
        const scriptName = item.textContent;
        if (!addedScripts.includes(scriptName)) {
            addedScripts.push(scriptName); // Add to the added scripts list
        }
    });

    updateTable();
    modal.style.display = 'none'; // Close modal after selection
}

document.getElementById('addAllScripts').onclick = function () {
    const allItems = document.querySelectorAll('.script-list li');
    allItems.forEach(item => {
        const scriptName = item.textContent;
        if (!addedScripts.includes(scriptName)) {
            addedScripts.push(scriptName); // Add to the added scripts list
        }
    });

    updateTable();
    modal.style.display = 'none'; // Close modal after selection
}

// Update table with selected scripts
function updateTable() {
    const tbody = document.getElementById('dataTableBody');
    tbody.innerHTML = ''; // Clear existing rows

    addedScripts.forEach(script => {
        const row = document.createElement('tr');
        row.innerHTML = `
                    <td>${script}</td>
                    <td id="${script}Bid" onclick="openOrderModal('${script}')">Loading...</td>
                    <td id="${script}Ask" onclick="openOrderModal('${script}')">Loading...</td>
                    <td id="${script}Ltp">Loading...</td>
                    <td id="${script}Change">Loading...</td>
                    <td id="${script}Percent">Loading...</td>
                    <td id="${script}High">Loading...</td>
                    <td id="${script}Low">Loading...</td>
                    <td id="${script}Open">Loading...</td>
                    <td id="${script}Close">Loading...</td>
                    <td><button onclick="removeScript(this)">Remove</button></td>
                `;
        tbody.appendChild(row);
    });
}
function submitOrder() {
    const buy = document.getElementById('buyCheckbox').checked;
    const sell = document.getElementById('sellCheckbox').checked;
    const orderType = document.getElementById('orderType').value;
    const lotSize = document.getElementById('lotSize').value;
    const quantity = document.getElementById('quantity').value;
    const price = document.getElementById('price').value;

    // Example: Process the order here
    console.log("Order Details:", {
        buy,
        sell,
        orderType,
        lotSize,
        quantity,
        price
    });

    // Close the modal after submitting the order
    closeOrderModal();
}

// Remove script from the table
function removeScript(button) {
    const row = button.parentElement.parentElement;
    const scriptName = row.cells[0].textContent;
    row.remove();
    addedScripts = addedScripts.filter(script => script !== scriptName); // Remove from addedScripts array
    renderScriptList(); // Re-render the script list to update availability
}

// Fetch market data for selected scripts
async function fetchMarketData() {
    let niftyPrice = 0; // To hold Nifty price
    let bankNiftyPrice = 0; // To hold Bank Nifty price

    for (const script of addedScripts) {
        try {
            const response = await fetch(`/${script.toLowerCase().replace(" ", "")}`);
            const data = await response.json();

            // Update the respective row
            document.getElementById(`${script}Bid`).textContent = `₹${data.regularMarketPrice.toFixed(2)}`;
            document.getElementById(`${script}Ask`).textContent = `₹${(data.regularMarketPrice - 1.26).toFixed(2)}`;
            document.getElementById(`${script}Ltp`).textContent = `₹${data.regularMarketPrice.toFixed(2)}`;
            document.getElementById(`${script}Change`).textContent = `₹${data.regularMarketChange.toFixed(2)}`;
            document.getElementById(`${script}Percent`).textContent = `${data.regularMarketChangePercent.toFixed(2)}%`;
            document.getElementById(`${script}High`).textContent = `₹${data.regularMarketDayHigh.toFixed(2)}`;
            document.getElementById(`${script}Low`).textContent = `₹${data.regularMarketDayLow.toFixed(2)}`;
            document.getElementById(`${script}Open`).textContent = `₹${data.regularMarketOpen.toFixed(2)}`;
            document.getElementById(`${script}Close`).textContent = `₹${data.regularMarketPreviousClose.toFixed(2)}`;

            // Check if the script is Nifty or Bank Nifty to update the ticker
            if (script === "Nifty 50") {
                niftyPrice = data.regularMarketPrice;
            } else if (script === "Bank Nifty") {
                bankNiftyPrice = data.regularMarketPrice;
            }
        } catch (error) {
            console.error(`Error fetching data for ${script}:`, error);
        }
    }

    // Update the ticker text after fetching data
}
async function fetchData() {
    try {
        // Fetch Nifty price
        const niftyResponse = await fetch('/nifty50');
        const niftyData = await niftyResponse.json();
        const niftyPrice = niftyData.regularMarketPrice;

        // Fetch Bank Nifty price
        const bankNiftyResponse = await fetch('/banknifty');
        const bankNiftyData = await bankNiftyResponse.json();
        const bankNiftyPrice = bankNiftyData.regularMarketPrice;

        // Update the ticker text
        document.getElementById('tickerText').textContent =
            `Nifty: ${niftyPrice} | Bank Nifty: ${bankNiftyPrice}`;
    } catch (error) {
        console.error('Error fetching data:', error);
        document.getElementById('tickerText').textContent =
            'Error fetching data';
    }
}


// Fetch data every 5 seconds
setInterval(fetchMarketData, 500); // Adjust the interval as needed
fetchData();
const mobile_nav = document.querySelector(".mobile-navbar-btn");
const nav_header = document.querySelector(".header");

const toggleNavbar = () => {
    // alert("Plz Subscribe ");
    nav_header.classList.toggle("active");
};

mobile_nav.addEventListener("click", () => toggleNavbar());</script>
</body>

</html>
